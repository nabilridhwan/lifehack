// This is Just the Test Code I decided to shift here for my reference

import { useUser } from "@auth0/nextjs-auth0/client";
import {
	Avatar,
	Box,
	Button,
	Card,
	CardBody,
	CardHeader,
	Code,
	Container,
	Heading,
	Stack,
	StackDivider,
	Text,
} from "@chakra-ui/react";
import Head from "next/head";
import { useRouter } from "next/router";
import Handler from "../api/test_request/index";
import {
	InternalServerErrorResponse,
	SuccessResponse,
} from "@unopass/responses";
import type { NextApiRequest, NextApiResponse } from "next";

async function handler(
	req: NextApiRequest,
	res: NextApiResponse<any>
) {
    const data = {hello: 'greeting'};
	try {
		if (req.method === "GET") {
			return new SuccessResponse(
				"Hello",
				data
			).handleResponse(req, res);
		}
	} catch (error: any) {
		return new InternalServerErrorResponse(
			error.message,
			error
		).handleResponse(req, res);
	}
}

// async function getStaticProps(context) {
//     // We will fetch the blog posts here
//   const data = await handler(req: NextApiRequest, res: NextApiResponse<any>);

//     return {
//       props: {} // props will be passed to the page
//     };
//   }

export default function LandingPage() {
	const router = useRouter();

	const { user } = useUser();

	return (
		<>
			<Head>
				<title>Create Next App</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<meta
					name="viewport"
					content="width=device-width, initial-scale=1"
				/>
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<main>
				<Container>
					<Stack spacing={5} marginTop={5}>
						<Heading size="lg">
							Sample Chakra UI Component by Nabil
						</Heading>

						{user && (
							<>
								<Card>
									{user && user.picture !== null && (
										<Container>
											<Stack marginY={5} spacing={2}>
												<Avatar
													src={user.picture}
													name={
														user.name ||
														"User Image"
													}
												/>

												<Heading size="md">
													{user.name}
												</Heading>

												<Text>{user.email}</Text>

												<Text>
													Email verified?{" "}
													{String(
														user.email_verified
													)}
												</Text>

												<Heading size="sm">
													User Object
												</Heading>

												<Code>
													{JSON.stringify(
														user,
														null,
														2
													)}
												</Code>
											</Stack>
										</Container>
									)}
								</Card>

								<Button
									onClick={() => {
										router.push("/api/auth/logout");
									}}
								>
									Logout
								</Button>
							</>
						)}

						{!user && (
							<Button
								onClick={() => {
									router.push("/api/auth/login");
								}}
							>
								Login
							</Button>
						)}

						<Card>
							<CardHeader>
								<Heading size="md">Client Report</Heading>
							</CardHeader>

							<CardBody>
								<Stack divider={<StackDivider />} spacing="4">
									<Box>
										<Heading
											size="xs"
											textTransform="uppercase"
										>
											Summary
										</Heading>
										<Text pt="2" fontSize="sm">
											View a summary of all your clients
											over the last month.
										</Text>
									</Box>
									<Box>
										<Heading
											size="xs"
											textTransform="uppercase"
										>
											Overview
										</Heading>
										<Text pt="2" fontSize="sm">
											Check out the overview of your
											clients.
										</Text>
									</Box>
									<Box>
										<Heading
											size="xs"
											textTransform="uppercase"
										>
											Analysis
										</Heading>
										<Text pt="2" fontSize="sm">
											See a detailed analysis of all your
											business clients.
										</Text>
									</Box>
								</Stack>
							</CardBody>
						</Card>
					</Stack>
				</Container>
			</main>
		</>
	);
}
